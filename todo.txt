unimplemented
  - turntables: `kat_apply_turntable_contact`
  - water: `kat_update_water_contact`
  - camera moving upwards to avoid clipping through a wall
  - camera gradual zoom out at goal size / preclear
  - prop motion
  - dynamic prop alphas
  - props with subobjects - where does rotation come from?
  - a billion other things


features
  custom physics framerate
    - all frame-based durations would need to be factored out - sounds really fun
  fast resetting
    - `Reset` interface to reset attempt-specific bits of game state
      - implement it on all parts of `GameState`
      - `derive` it on structs for which all fields are `Resettable`? sounds like a good exercise

refactoring
  - standardized `ticks`/`frames` everywhere
    - `timer` vs `duration` vs `count` vs whatever else
  - refactor `ray_idx` into an enum: { CollisionRay(i16), ShellRay(i16) }
  - remove `scale_translation` and `set_translation`, replace with `modify_translation`
    - also rename `modify_translation` -> `assign_translation`
  - change argments of `vec3_from!` so that it's `u op v`
  - rename `vec3_unit_xz` -> `vec3_lateral_unit`
  - fix signedness of everything; anything that can never be negative should be unsigned
  - change stage config sound id methods to return Option<SoundId>
    - change `play_sound_fx` to accept `Option<SoundId>` instead of `SoundId`
  - get rid of `PropRef` - store `Vec<Prop>` in `PropsState`, and all other prop references are
    just ctrl indices
  - use `num_enum` crate on all enums that need to be converted to/from primitives
  - standardize delegates field name (either all `delegates` or all `delegates_ref`)
  - merge `delegates` and `has_delegates` modules, make `sound_id` and `vfx_id` top-level
  - replace `Katamari::ray_contact_floor_idxs` (a vector of ray indices that contact a floor)
    with an array [bool; u32], that's true at index i if ray i contacts a floor

perf
  - is it possible to drop the static `include_bytes!` data after
    reading it into tables? (e.g. for stage config table)
    - yes, just call `include_bytes!` in a non-static scope so that it's dropped lol

bugs
  - actually remove `detached_indices` from `attached_props` in `Katamari::detach_props`
  - a bunch of non-visible props still not being hidden/unattached/destroyed

docs
  - glossary of terms
    - prop, name idx, ctrl idx, delegate, collision ray (all three types)
    - include links to the source code
